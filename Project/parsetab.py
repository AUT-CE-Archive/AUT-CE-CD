
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSleftANDORAND ASSIGN BIGGER BIGGEREQUAL DIVIDE DO ELSE EQUAL FLOAT IDENTIFIER IF INTEGER LPAREN MINUS MOD NOT NOTEQUAL OR PLUS PRINT RPAREN SMALLER SMALLEREQUAL THEN TIMES WHILEstatement : IDENTIFIER ASSIGN expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression DIVIDE expression\n                  | expression TIMES expression\n                  | expression MOD expressionexpression : NOT expressionexpression : expression AND expression\n                  | expression OR expressionexpression : expression BIGGER expression\n                  | expression SMALLER expression\n                  | expression EQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression BIGGEREQUAL expression\n                  | expression SMALLEREQUAL expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : INTEGER\n                  | FLOATexpression : IDENTIFIERstatement : IF expression THEN statementstatement : IF expression THEN statement ELSE statementstatement : WHILE expression DO statementstatement : PRINT expression'
    
_lr_action_items = {'IDENTIFIER':([0,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,47,48,52,],[2,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,2,2,2,]),'IF':([0,47,48,52,],[4,4,4,4,]),'WHILE':([0,47,48,52,],[5,5,5,5,]),'PRINT':([0,47,48,52,],[6,6,6,6,]),'NOT':([0,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,47,48,52,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,],[7,-21,14,7,7,7,7,7,7,-19,-20,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,-21,14,14,-17,14,14,14,-3,-4,-5,-6,-7,-9,-10,14,14,14,14,14,14,7,7,-18,7,]),'LPAREN':([0,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,47,48,52,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INTEGER':([0,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,47,48,52,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FLOAT':([0,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,47,48,52,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'$end':([1,2,3,10,11,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,53,],[0,-21,-2,-19,-20,-21,-25,-17,-8,-1,-3,-4,-5,-6,-7,-9,-10,-11,-12,-13,-14,-15,-16,-18,-22,-24,-23,]),'ASSIGN':([2,],[12,]),'PLUS':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,13,-19,-20,13,-21,13,13,-17,13,13,13,-3,-4,-5,-6,-7,-9,-10,13,13,13,13,13,13,-18,]),'DIVIDE':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,15,-19,-20,15,-21,15,15,-17,15,15,15,15,15,-5,-6,-7,-9,-10,15,15,15,15,15,15,-18,]),'TIMES':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,16,-19,-20,16,-21,16,16,-17,16,16,16,16,16,-5,-6,-7,-9,-10,16,16,16,16,16,16,-18,]),'MOD':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,17,-19,-20,17,-21,17,17,-17,17,17,17,17,17,-5,-6,-7,-9,-10,17,17,17,17,17,17,-18,]),'AND':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,18,-19,-20,18,-21,18,18,18,18,18,18,18,18,18,18,18,-9,-10,18,18,18,18,18,18,-18,]),'OR':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,19,-19,-20,19,-21,19,19,19,19,19,19,19,19,19,19,19,-9,-10,19,19,19,19,19,19,-18,]),'BIGGER':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,20,-19,-20,20,-21,20,20,-17,20,20,20,-3,-4,-5,-6,-7,-9,-10,20,20,20,20,20,20,-18,]),'SMALLER':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,21,-19,-20,21,-21,21,21,-17,21,21,21,-3,-4,-5,-6,-7,-9,-10,21,21,21,21,21,21,-18,]),'EQUAL':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,22,-19,-20,22,-21,22,22,-17,22,22,22,-3,-4,-5,-6,-7,-9,-10,22,22,22,22,22,22,-18,]),'NOTEQUAL':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,23,-19,-20,23,-21,23,23,-17,23,23,23,-3,-4,-5,-6,-7,-9,-10,23,23,23,23,23,23,-18,]),'BIGGEREQUAL':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,24,-19,-20,24,-21,24,24,-17,24,24,24,-3,-4,-5,-6,-7,-9,-10,24,24,24,24,24,24,-18,]),'SMALLEREQUAL':([2,3,10,11,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-21,25,-19,-20,25,-21,25,25,-17,25,25,25,-3,-4,-5,-6,-7,-9,-10,25,25,25,25,25,25,-18,]),'ELSE':([2,3,10,11,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,53,],[-21,-2,-19,-20,-21,-25,-17,-8,-1,-3,-4,-5,-6,-7,-9,-10,-11,-12,-13,-14,-15,-16,-18,52,-24,-23,]),'THEN':([10,11,26,27,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-19,-20,47,-21,-17,-8,-3,-4,-5,-6,-7,-9,-10,-11,-12,-13,-14,-15,-16,-18,]),'DO':([10,11,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-19,-20,-21,48,-17,-8,-3,-4,-5,-6,-7,-9,-10,-11,-12,-13,-14,-15,-16,-18,]),'RPAREN':([10,11,27,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,49,],[-19,-20,-21,-17,-8,49,-3,-4,-5,-6,-7,-9,-10,-11,-12,-13,-14,-15,-16,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,47,48,52,],[1,50,51,53,]),'expression':([0,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,47,48,52,],[3,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> IDENTIFIER ASSIGN expression','statement',3,'p_statement_assign','_parser.py',27),
  ('statement -> expression','statement',1,'p_statement_expr','_parser.py',33),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetics','_parser.py',38),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetics','_parser.py',39),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetics','_parser.py',40),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetics','_parser.py',41),
  ('expression -> expression MOD expression','expression',3,'p_expression_arithmetics','_parser.py',42),
  ('expression -> NOT expression','expression',2,'p_expression_logical_not','_parser.py',60),
  ('expression -> expression AND expression','expression',3,'p_expression_logical','_parser.py',70),
  ('expression -> expression OR expression','expression',3,'p_expression_logical','_parser.py',71),
  ('expression -> expression BIGGER expression','expression',3,'p_expression_comparison','_parser.py',82),
  ('expression -> expression SMALLER expression','expression',3,'p_expression_comparison','_parser.py',83),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_comparison','_parser.py',84),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_comparison','_parser.py',85),
  ('expression -> expression BIGGEREQUAL expression','expression',3,'p_expression_comparison','_parser.py',86),
  ('expression -> expression SMALLEREQUAL expression','expression',3,'p_expression_comparison','_parser.py',87),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','_parser.py',102),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','_parser.py',108),
  ('expression -> INTEGER','expression',1,'p_expression_number','_parser.py',114),
  ('expression -> FLOAT','expression',1,'p_expression_number','_parser.py',115),
  ('expression -> IDENTIFIER','expression',1,'p_expression_name','_parser.py',120),
  ('statement -> IF expression THEN statement','statement',4,'p_expression_if','_parser.py',126),
  ('statement -> IF expression THEN statement ELSE statement','statement',6,'p_expression_if_else','_parser.py',131),
  ('statement -> WHILE expression DO statement','statement',4,'p_expression_while','_parser.py',137),
  ('statement -> PRINT expression','statement',2,'p_expression_print','_parser.py',142),
]
